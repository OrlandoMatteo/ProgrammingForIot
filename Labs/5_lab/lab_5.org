#+AUTHOR: Matteo Orlando
#+LATEX_COMPILER: xelatex
#+latex_class: article
#+latex_class_options:[a4paper]
#+latex_header: \usepackage{fontspec}
#+latex_header:\setmainfont{Cabin}
#+LaTeX_HEADER: \usepackage[margin=1.25in]{geometry}
#+LaTeX_HEADER:\usepackage{minted}
#+TITLE:Programming for Iot - Lab 5
#+OPTIONS: toc:nil
#+OPTIONS: date:nil


* Exercise 1
Develop a RESTful style Catalog of a distributed platform for general purpose services. Identify the most suitable HTTP methods (among GET, POST, PUT and DELETE) and develop the web services to:

1. Retrieve information about IP address and port of the message broker
   in the platform

2. Add a new device with the following information

   - unique deviceID

   - end-points (i.e. Rest Web Services and/or MQTT topics)

   - available resources (e.g. Temperature, Humidity and Motion sensor)

   - “insert-timestamp” when this device was added

#+BEGIN_QUOTE
  (*SUGGESTION:* to avoid synchronization issues, this attribute is
  managed and updated only by the Catalog according to its system clock)
#+END_QUOTE

4. Update the information of a device

5. Retrieve all the registered devices

6. Retrieve a specific device with a deviceID

7. Register a new user with the following information

   - unique userID

   - name

   - surname

   - email address(es)

8. Retrieve all the registered users

9. Retrieve a specific user with a certain userID

#+BEGIN_QUOTE
  *This information is stored in a JSON file and all the information
  among the actors in the platform must be exchanged in JSON*

  Implement an additional feature of the Catalog to remove all the
  devices with “insert-timestamp” higher than two minutes. The Catalog
  has to take this action periodically (for example every 1 minute).
#+END_QUOTE

* Exercise 2
Modify one of the sensor developed in the previous lab (lab 4 exercises 1 and 2)
in order to be able to invoke the RESTful Catalog developed
in Exercise 1 to periodically (for example every 1 minute) :
- either registers as new devices or
- refresh the old registration by updating theirs “insert-timestamp”.

During the refresh of an old device registration,the Catalog has to update also
the “insert-timestamp”.

* Exercise 3
Modify the exercise 3 of lab 4 in order to make it able to contatct the catalog developed in the first exercise.
When this application starts, it **MUST** connect to the catalog in order to
obtain the information needed to retrieve the mesurements from the sensor (IP
address or MQTT topic) and periodically contact the catalog to update the registration

* Exercise 4
#+BEGIN_EXPORT latex
\color{purple}
\emph{
This exercise could be quite useful for your final
project, feel free to customize it according to the purpose of our project.
The general challeges that needs to be assessed are:
\begin{itemize}
\item having multiple user for your project
\item having multiple sensor for each user
\item each user must be able to see his own information
\end{itemize}
}
\color{black}
#+END_EXPORT


Using the application developed in all the exercise before try to deploy a simple simulation like the one described below

#+BEGIN_QUOTE
You have developed a system that allows your clients to monitor the temperature in their houses and to switch on and off the light. In your system there are 2 houses with one user each. Each one of this houses has a led and a temperature sensor. In your system there is also a controll application to logs for each user the temperature values outside a common threshold. Each user must be able to obtain his own log of the temperatures and must be able to see and set the status of his light.
#+END_QUOTE

** Bonus improvements
- each user has it's own custom treshold for the temperatures
- each user has more than one temperature sensor and light
